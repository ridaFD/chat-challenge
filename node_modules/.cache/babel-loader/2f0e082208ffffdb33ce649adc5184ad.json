{"ast":null,"code":"var _jsxFileName = \"/home/rida/chat-challenge/src/App.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isConnected: false\n    };\n    this.socket = null;\n  }\n\n  componentWillMount() {\n    this.socket = io('https://codi-server.herokuapp.com');\n    this.socket.on('connect', () => {\n      this.setState({\n        isConnected: true\n      });\n    });\n    this.socket.on('disconnect', () => {\n      this.setState({\n        isConnected: false\n      });\n    });\n    /** this will be useful way, way later **/\n\n    this.socket.on('room', old_messages => console.log(old_messages));\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n    this.socket = null;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"status: \", this.state.isConnected ? 'connected' : 'disconnected'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rida/chat-challenge/src/App.js"],"names":["React","io","App","Component","state","isConnected","socket","componentWillMount","on","setState","old_messages","console","log","componentWillUnmount","close","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BC,KAF0B,GAElB;AACNC,MAAAA,WAAW,EAAC;AADN,KAFkB;AAAA,SAK1BC,MAL0B,GAKjB,IALiB;AAAA;;AAO1BC,EAAAA,kBAAkB,GAAE;AAElB,SAAKD,MAAL,GAAcL,EAAE,CAAC,mCAAD,CAAhB;AAEA,SAAKK,MAAL,CAAYE,EAAZ,CAAe,SAAf,EAA0B,MAAM;AAC9B,WAAKC,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAC;AAAb,OAAd;AACD,KAFD;AAIA,SAAKC,MAAL,CAAYE,EAAZ,CAAe,YAAf,EAA6B,MAAM;AACjC,WAAKC,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAC;AAAb,OAAd;AACD,KAFD;AAIA;;AACA,SAAKC,MAAL,CAAYE,EAAZ,CAAe,MAAf,EAAuBE,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAAvC;AAGD;;AAEDG,EAAAA,oBAAoB,GAAE;AACpB,SAAKP,MAAL,CAAYQ,KAAZ;AACA,SAAKR,MAAL,GAAc,IAAd;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAc,KAAKX,KAAL,CAAWC,WAAX,GAAyB,WAAzB,GAAuC,cAArD,CADF,CADF;AAKD;;AApCyB;;AAuC5B,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\n\nclass App extends Component {\n\n  state = {\n    isConnected:false\n  }\n  socket = null\n\n  componentWillMount(){\n\n    this.socket = io('https://codi-server.herokuapp.com');\n\n    this.socket.on('connect', () => {\n      this.setState({isConnected:true})\n    })\n\n    this.socket.on('disconnect', () => {\n      this.setState({isConnected:false})\n    })\n\n    /** this will be useful way, way later **/\n    this.socket.on('room', old_messages => console.log(old_messages))\n\n\n  }\n\n  componentWillUnmount(){\n    this.socket.close()\n    this.socket = null\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>status: {this.state.isConnected ? 'connected' : 'disconnected'}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}